import{_ as n,o as s,c as a,a as t}from"./app-c838d3fa.js";const p={},e=t(`<h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h2><h5 id="in-rust" tabindex="-1"><a class="header-anchor" href="#in-rust" aria-hidden="true">#</a> In Rust</h5><p><strong>1.install</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">cargo</span> <span class="token function">add</span> osmanthus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2.useage</strong></p><p>osmanthus provides 4+1 modes:</p><ol class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> <strong>absolute time text</strong>｜such as <code>2013年july18 10:03下午</code></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> <strong>relative time text</strong>｜such as <code>3小时前</code>、<code>2 minutes ago</code></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> <strong>timestamp time text</strong>｜such as<code>1685025365</code>、<code>1663025361000</code></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> <strong>series time text</strong>｜such as<code>https://example.com/20210315/img/2035.png</code></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> <strong>auto,any time text</strong>. It including 4 modes: <strong>absolute</strong> and <strong>relative</strong> and <strong>timestamp</strong> and <strong>series</strong>, in the order: <strong>timestamp</strong> &gt; <strong>relative</strong> &gt; <strong>absolute</strong> &gt; <strong>series</strong></li></ol><blockquote><p>Tips: When you don&#39;t know what type of time text it is, or if you want the osmanthus to recognize it on its own, it is recommended to use auto mode.</p></blockquote><p><strong>2.1 parse absolute time text</strong></p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span></span>parse_absolute<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span>bind<span class="token punctuation">::</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> samples <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span>
        <span class="token string">&quot;3/08/2023 | 11:51&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2023-08-03 11:51:00</span>
        <span class="token string">&quot;aug 06 .2023 10h42&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2023-08-06 10:42:00&quot;</span>
        <span class="token string">&quot;2013年12月8号 pm 3:00&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2013-12-08 15:00:00</span>
        <span class="token string">&quot;26 ก.ค. 2566 08:00 น.&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2023-07-26 08:00:00</span>
        <span class="token string">&quot;2014年04月08日11时25分18秒 下午&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2014-04-08 23:25:18</span>
        <span class="token string">&quot;2023-02-05 10:03:37 pm cst&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;2023-07-30T14:12:51+02:00&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> sample <span class="token keyword">in</span> samples<span class="token punctuation">{</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span><span class="token function">parse_absolute</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Param</span><span class="token punctuation">{</span>strict<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> datetime <span class="token operator">=</span> r<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>local<span class="token punctuation">.</span>datetime<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;absolute time text parse result: {:?}, status: {}&quot;</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.2 parse relative time text</strong></p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span></span>parse_relative<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span>bind<span class="token punctuation">::</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> samples <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span>
        <span class="token string">&quot;发布于 - /n6小時前,&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 6 hours ago</span>
        <span class="token string">&quot;（ 시간: 3분 전）&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 3 minute ago</span>
        <span class="token string">&quot;- about / 2 minutes ago&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 2 minutes ago</span>
        <span class="token string">&quot;30天前 来源：新华网&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 30 days ago</span>
        <span class="token string">&quot;publish 5 second ago.&quot;</span> <span class="token comment">// 5 second ago.</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> sample <span class="token keyword">in</span> samples<span class="token punctuation">{</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span><span class="token function">parse_relative</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Param</span><span class="token punctuation">{</span>strict<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> datetime <span class="token operator">=</span> r<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>local<span class="token punctuation">.</span>datetime<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;relative time text parse result: {:?}, status: {}&quot;</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.3 parse timestamp time text</strong></p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span></span>parse<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span>bind<span class="token punctuation">::</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> samples <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span>
        <span class="token string">&quot;1677380340&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// success</span>
        <span class="token string">&quot;1677380340236982058745&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// parse fail</span>
        <span class="token string">&quot;16773803abc&quot;</span><span class="token punctuation">,</span>   <span class="token comment">// parse fail</span>
        <span class="token string">&quot;你好，中国&quot;</span><span class="token punctuation">,</span>   <span class="token comment">// parse fail</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> sample <span class="token keyword">in</span> samples<span class="token punctuation">{</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span><span class="token function">parse</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Param</span><span class="token punctuation">{</span>strict<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> datetime <span class="token operator">=</span> r<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>local<span class="token punctuation">.</span>datetime<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;timestamp time text parse result: {:?}, status: {}&quot;</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.4 parse Series time text</strong></p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span></span>parse_series<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span>bind<span class="token punctuation">::</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> samples <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span>
        <span class="token string">&quot;https://www.kingname.info/2022/JULY309/this20350205-is-gnelist/&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2022-07-30 00:00:00&quot;</span>
        <span class="token string">&quot;H_502_5@2010oct03 @H_502_5@2012/07/26.doc&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2010-10-03 00:00:00</span>
        <span class="token string">&quot;https://new.qq.com/rain/a/k09381120221126A03W2R00&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 2022-11-26 00:00:00</span>
        <span class="token string">&quot;/202211/W02022110720101102590.jpg&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 2022-11-07 00:00:00</span>
        <span class="token string">&quot;http://cjrb.cjn.cn/html/2023-01/16/content_250826.htm&quot;</span> <span class="token comment">// 2023-01-16 00:00:00</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> sample <span class="token keyword">in</span> samples<span class="token punctuation">{</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span><span class="token function">parse_series</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Param</span><span class="token punctuation">{</span>strict<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> datetime <span class="token operator">=</span> r<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>local<span class="token punctuation">.</span>datetime<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;series time text parse result: {:?}, status: {}&quot;</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.5 auto, parse any time text</strong></p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span></span>parse<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">osmanthus<span class="token punctuation">::</span>bind<span class="token punctuation">::</span></span><span class="token class-name">Param</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> samples <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span>
        <span class="token string">&quot;https://www.kingname.info/2022/JULY309/this20350205-is-gnelist/&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// series, 2022-07-30 00:00:00&quot;</span>
        <span class="token string">&quot;3/08/2023 | 11:51&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// absolute, 2023-08-03 11:51:00</span>
        <span class="token string">&quot;发布于 - /n6小時前,&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// relative, 6 hours ago</span>
        <span class="token string">&quot;/202211/W02022110720101102590.jpg&quot;</span><span class="token punctuation">,</span> <span class="token comment">// series, 2022-11-07 00:00:00</span>
        <span class="token string">&quot;1677380340&quot;</span> <span class="token comment">// timestamp, 2023-02-26 10:59:00</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> sample <span class="token keyword">in</span> samples<span class="token punctuation">{</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span><span class="token function">parse</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Param</span><span class="token punctuation">{</span>strict<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> datetime <span class="token operator">=</span> r<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>local<span class="token punctuation">.</span>datetime<span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;time text  parse result: {:?}, status: {}&quot;</span><span class="token punctuation">,</span> datetime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[e];function c(u,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","index.html.vue"]]);export{k as default};
